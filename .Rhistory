sample(c(0,1),prob = c(0.5,0.5))
sample(c(0,1),size = 1,prob = c(0.5,0.5))
rnorm(1,mean = -5,sd = 1)
nflips = 8
array = rep(NA,8)
for (i in 1:nflips){
sample(c(0,1),size = 1,prob = c(0.5,0.5))
rnorm(1,mean = -5,sd = 1)
}
nflips = 8
outcome = rep(NA,8)
for (i in 1:nflips){
side = sample(c(0,1),size = 1,prob = c(0.5,0.5))
outcome[i] = side* rnorm(1,mean = -5,sd = 1)
}
outcome
nflips = 100
n_trials = 10000
M = rep(NA,n_trials)
SD = rep(NA,n_trials)
for (i in 1:n_trials){
side = sample(c(rep(0,nflips/2),rep(1,nflips/2)),size = nflips)
outcome = side* rnorm(n = nflips,mean = -10,sd = 3)
M[i] = mean(outcome)
SD[i] = sd(outcome)
}
hist(M)
hist(SD)
nflips = 10
n_trials = 10000
M = rep(NA,n_trials)
SD = rep(NA,n_trials)
for (i in 1:n_trials){
side = sample(c(rep(0,nflips/2),rep(1,nflips/2)),size = nflips)
outcome = side* rnorm(n = nflips,mean = -10,sd = 3)
M[i] = mean(outcome)
SD[i] = sd(outcome)
}
hist(M)
hist(SD)
read.csv("2022-06-02__gambling_task.csv")
df = read.csv("2022-06-02__gambling_task.csv")
View(df)
df_gamble = df %>% filter(gambling_trial == "yes")
library(dplyr)
df = read.csv("2022-06-02__gambling_task.csv")
df_gamble = df %>% filter(gambling_trial == "yes")
View(df)
df_gamble = df %>% filter(gamble_trial == "yes")
View(df_gamble)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
library(dplyr)
df = read.csv("2022-06-02__gambling_task.csv")
install.packages("tidyverse")
library(dplyr)
library(dplyr)
df = read.csv("2022-07-06_1000_exposure_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes")
df
df = read.csv("2022-07-17_1000_gambling_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes")
sample(df_gamble$loss,1)
df_gamble
View(df)
112614-103535
9079/60
View(df)
df_gamble = df %>% filter(gamble_trial == "yes")
library(ggplot2)
ggplot(df_gamble,aes(Mu,Response,color = SD,group = SD))+
geom_point()
ggplot(df_gamble,aes(Mu,response,color = SD,group = SD))+
geom_point()
ggplot(df_gamble,aes(Mu,response,color = SD,group = SD))+
stat_summary(fun.data = "mean_cl_boot")
ggplot(df_gamble,aes(Mu,response,color = SD,group = SD))+
stat_summary(fun.data = "mean_cl_boot")
View(df_gamble)
ggplot(df_gamble,aes(Mu,response,color = SD,group = SD))+
stat_summary(fun.data = "mean")
ggplot(df_gamble,aes(x = Mu,y = response,color = SD,group = SD))+
stat_summary(fun.data = "mean")
df_gamble
ggplot(df_gamble,aes(x = Mu,y = response,color = SD,group = SD))+
stat_summary(fun.y = "mean")
View(df_gamble)
df_gamble = df %>% filter(gamble_trial == "yes" & task= "test")
df_gamble = df %>% filter(gamble_trial == "yes" & task== "test")
View(df_gamble)
View(df)
df_gamble = df %>% filter(gamble_trial == "yes" & block== "test")
df = read.csv("2022-07-17_1000_gambling_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes" & block== "test")
df_gamble = df %>% filter(gamble_trial == "yes" & Block== "test")
library(ggplot2)
ggplot(df_gamble,aes(x = Mu,y = response,color = SD,group = SD))+
stat_summary(fun.y = "mean")+facet_wrap(~Block)
View(df_gamble)
View(df)
ggplot(df_gamble,aes(x = trial,y = response))+
stat_summary(fun.y = "mean")
ggplot(df_gamble,aes(x = trial,y = response))+
stat_summary(fun = "mean")
ggplot(df_gamble,aes(x = SD,y = response))+
stat_summary(fun = "mean")
ggplot(df_gamble,aes(x = SD,y = response))+
stat_summary(fun.data = "mean_cl_boot")
ggplot(df_gamble,aes(x = SD,y = response))+
stat_summary(fun.data = "mean_cl_boot",na.rm = TRUE)
View(df_gamble)
ggplot(df_gamble,aes(x = SD,y = response))+
stat_summary(fun.data = "mean",na.rm = TRUE)
ggplot(df_gamble,aes(x = Mu,y = response,color = SD,group = SD))+
stat_summary(fun.y = "mean")
ggplot(df_gamble,aes(x = Mu,y = response,color = SD,group = SD))+
stat_summary(fun = "mean")
ggplot(df_gamble,aes(x = trial,y = response,color = SD,group = SD))+
stat_summary(fun = "mean")
ggplot(df_gamble,aes(x = trial,y = response,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
View(df_gamble)
ggplot(df_gamble,aes(x = trial,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
ggplot(df_gamble,aes(x = trial,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean_cl_boot")+facet_wrap(~Mu)
?stat_summary
ggplot(df_gamble,aes(x = trial,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
View(df_gamble)
ggplot(df_gamble,aes(x = sure_option,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
ggplot(df_gamble,aes(x = sure_option,y = response,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
View(df_gamble)
View(df)
View(df_gamble)
View(df)
ggplot(df_gamble,aes(x = trial,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
library(dplyr)
df = read.csv("2022-07-19_1002_gambling_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes")
df = read.csv("2022-07-19_1001_gambling_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes")
sample(df_gamble$loss,1)
df = read.csv("2022-07-19_1001_gambling_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes" & Block== "test")
library(ggplot2)
ggplot(df_gamble,aes(x = trial,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
ggplot(df_gamble,aes(x = sure_option,y = response,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
View(df)
ggplot(df_gamble,aes(x = trial,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
ggplot(df_gamble,aes(x = sure_option,y = response,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~Mu)
library(dplyr)
df = read.csv("2023-03-20_test_gambling_task.csv")
df_gamble = df %>% filter(gamble_trial == "yes")
View(df_gamble)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
sample(df_gamble$loss,1)
library(dplyr)
df = read.csv("2023-05-03_1006_gambling_task.csv")
View(df_gamble)
df_gamble = df %>% filter(gamble_trial == "yes")
sample(df_gamble$loss,1)
df = read.csv("2023-05-03_1007_gambling_task.csv")
df_gamble = df %>% filter(!is.na(sure_option))
#####################################
# Gambling
#####################################
library(dplyr)
df = read.csv("2023-05-03_1007_gambling_task.csv")
df_gamble = df %>% filter(!is.na(sure_option))
library(ggplot2)
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)+
coord_cartesian(xlim = c(0,20))
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)+
coord_cartesian(ylim = c(0,20))
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)+
coord_cartesian(lim = c(0,-20))
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)+
coord_cartesian(ylim = c(0,-20))
ggplot(df_gamble,aes(x = sure_option,y = response,color = use_imagery,group = use_imagery))+
stat_summary(fun = "mean",position = 'dodge')+facet_wrap(SD~side_1_stim)
df = read.csv("2023-05-03_1006_gambling_task.csv")
df_gamble = df %>% filter(!is.na(sure_option))
library(ggplot2)
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)+
coord_cartesian(ylim = c(0,-20))
ggplot(df_gamble,aes(x = sure_option,y = response,color = use_imagery,group = use_imagery))+
stat_summary(fun = "mean",position = 'dodge')+facet_wrap(SD~side_1_stim)
#####################################
# Exposure
#####################################
exp_df = read.csv("2023-05-03_1006_exposure_task.csv")
exp_df = exp_df%>%
mutate(score = ifelse((match_array==1 & response == 1)|(match_array==0 & response == 0),1,0))
library(ggplot2)
ggplot(exp_df,aes(x = image_stim,score,group = match_array,color = match_array))+
stat_summary(fun = "mean")
df = read.csv("2023-05-03_1005_gambling_task.csv")
df_gamble = df %>% filter(!is.na(sure_option))
library(ggplot2)
ggplot(df_gamble,aes(x = use_imagery,y = loss,color = SD,group = SD))+
stat_summary(fun = "mean")+facet_wrap(~side_1_stim)+
coord_cartesian(ylim = c(0,-20))
View(df)
current_coin=  [3, 1, 3, 3, 3, 1, 1, 1, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1,
current_coin=  c(3, 1, 3, 3, 3, 1, 1, 1, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1,
1, 3, 3, 1, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 3, 3, 3,)
current_coin=  c(3, 1, 3, 3, 3, 1, 1, 1, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1,
1, 3, 3, 1, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 3, 3, 3)
task_array  = c('view', 'img', 'view', 'img', 'view', 'img', 'img', 'view', 'view', 'view', 'img',
'view', 'view', 'view', 'view', 'view', 'img', 'img', 'img', 'view', 'img', 'img',
'img', 'img', 'img', 'img', 'img', 'view', 'view', 'view', 'view', 'img', 'img',
'img', 'img', 'view', 'view', 'img', 'img', 'view', 'view', 'view', 'view', 'img',
'img', 'view', 'img', 'view')
loss_array  = c(-12, -10, -10,  -5,  -8, -11,  -8,  -3,  -5,  -5,  -4,  -9,  -3, -12,
-16,  -4, -17,  -9, -10, -10, -11, -12, -17, -10, -12,  -3,  -3, -17,
-8, -11, -17, -16,  -5, -15, -16, -15, -10,  -9,  -8,  -4, -10, -16,
-15, -10,  -4,  -9, -15, -11)
outcome = c(0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1,
0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0)
list(current_coin=  c(3, 1, 3, 3, 3, 1, 1, 1, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1,
1, 3, 3, 1, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 3, 3, 3),
task_array  = c('view', 'img', 'view', 'img', 'view', 'img', 'img', 'view', 'view', 'view', 'img',
'view', 'view', 'view', 'view', 'view', 'img', 'img', 'img', 'view', 'img', 'img',
'img', 'img', 'img', 'img', 'img', 'view', 'view', 'view', 'view', 'img', 'img',
'img', 'img', 'view', 'view', 'img', 'img', 'view', 'view', 'view', 'view', 'img',
'img', 'view', 'img', 'view'),
loss_array  = c(-12, -10, -10,  -5,  -8, -11,  -8,  -3,  -5,  -5,  -4,  -9,  -3, -12,
-16,  -4, -17,  -9, -10, -10, -11, -12, -17, -10, -12,  -3,  -3, -17,
-8, -11, -17, -16,  -5, -15, -16, -15, -10,  -9,  -8,  -4, -10, -16,
-15, -10,  -4,  -9, -15, -11),
outcome = c(0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1,
0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0))
df = list(current_coin=  c(3, 1, 3, 3, 3, 1, 1, 1, 1, 1, 3, 3, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1,
1, 3, 3, 1, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 1, 1, 3, 1, 1, 1, 3, 3, 3, 3),
task_array  = c('view', 'img', 'view', 'img', 'view', 'img', 'img', 'view', 'view', 'view', 'img',
'view', 'view', 'view', 'view', 'view', 'img', 'img', 'img', 'view', 'img', 'img',
'img', 'img', 'img', 'img', 'img', 'view', 'view', 'view', 'view', 'img', 'img',
'img', 'img', 'view', 'view', 'img', 'img', 'view', 'view', 'view', 'view', 'img',
'img', 'view', 'img', 'view'),
loss_array  = c(-12, -10, -10,  -5,  -8, -11,  -8,  -3,  -5,  -5,  -4,  -9,  -3, -12,
-16,  -4, -17,  -9, -10, -10, -11, -12, -17, -10, -12,  -3,  -3, -17,
-8, -11, -17, -16,  -5, -15, -16, -15, -10,  -9,  -8,  -4, -10, -16,
-15, -10,  -4,  -9, -15, -11),
outcome = c(0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1,
0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0))
df = as.data.frame(df)
current_coin  = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
task_array  = c('img','view','img','img','view','img','view','img','view','view','img',
'view','img','view','view','img','img','view','img','view','view','img',
'view','img')
loss_array = c( -6,  -6, -13, -14,  -7,  -6, -14,  -8, -12,  -8, -14, -13, -12,  -7,
-13, -12,  -7,  -8, -13, -12,  -6,  -7, -14,  -8)
outcome = c(1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1)
list(
current_coin  = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
task_array  = c('img','view','img','img','view','img','view','img','view','view','img',
'view','img','view','view','img','img','view','img','view','view','img',
'view','img'),
loss_array = c( -6,  -6, -13, -14,  -7,  -6, -14,  -8, -12,  -8, -14, -13, -12,  -7,
-13, -12,  -7,  -8, -13, -12,  -6,  -7, -14,  -8),
outcome = c(1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1)
)
df = list(
current_coin  = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
task_array  = c('img','view','img','img','view','img','view','img','view','view','img',
'view','img','view','view','img','img','view','img','view','view','img',
'view','img'),
loss_array = c( -6,  -6, -13, -14,  -7,  -6, -14,  -8, -12,  -8, -14, -13, -12,  -7,
-13, -12,  -7,  -8, -13, -12,  -6,  -7, -14,  -8),
outcome = c(1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1)
)
df = as.data.frame(df)
